version: '3.8'

services:
  auth-postgres:
    image: 'postgres:latest'
    container_name: auth-postgres
    environment:
      POSTGRES_DB: ${AUTH_POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - online-traveling-network
    ports:
      - '${POSTGRES_PORT}:5432'
  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - online-traveling-network
    ports:
      - '2181:2181'

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTIZED_HOST_NAME: localhost
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    networks:
      - online-traveling-network

  auth-service:
    build:
      context: ./auth
    container_name: auth-service
    ports:
      - "8080:8080"
    environment:
      - ENV=production
      - TZ=Asia/Tehran
      - AUTH_CONFIG_PATH=/app/config.json
      - KAFKA_BROKER=kafka:9092
    networks:
      - online-traveling-network
    restart: unless-stopped
    depends_on:
      - auth-postgres
      - kafka
    volumes:
      - ${AUTH_CONFIG_PATH}:/app/config.json

networks:
  online-traveling-network:
    driver: bridge
