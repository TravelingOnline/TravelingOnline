version: '3.8'

services:

  auth-postgres:
    image: 'postgres:latest'
    container_name: auth-postgres
    environment:
      POSTGRES_DB: ${AUTH_POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - online-traveling-network
        # ipv4_address: 172.19.0.2

    ports:
      - '${AUTH_POSTGRES_PORT}:5432'
  # auth-service:
  #   build:
  #     context: ./auth
  #   container_name: auth-service
  #   ports:
  #     - "8081:8081"
  #     - "50051:50051"
  #   environment:
  #     - ENV=production
  #     - TZ=Asia/Tehran
  #     - AUTH_CONFIG_PATH=/app/config.json
  #     # - KAFKA_BROKER=kafka:9092
  #   networks:
  #     - online-traveling-network
  #       # ipv4_address: 172.19.0.10
  #   restart: unless-stopped
  #   depends_on:
  #     - auth-postgres
  #   volumes:
  #     - ${AUTH_CONFIG_PATH}:/app/config.json
  bank-postgres:
    image: 'postgres:latest'
    container_name: bank-postgres
    environment:
      POSTGRES_DB: ${BANK_POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - online-traveling-network
        # ipv4_address: 172.19.0.3
    ports:
      - '${BANK_POSTGRES_PORT}:5432'

  
  # bank-service:
  #   build:
  #     context: ./bank
  #   container_name: bank-service
  #   ports:
  #     - "8082:8082"
  #     - "50052:50052"
  #   environment:
  #     - ENV=production
  #     - TZ=Asia/Tehran
  #     - BANK_CONFIG_PATH=/app/config.json
  #     # - KAFKA_BROKER=kafka:9092
  #   networks:
  #     - online-traveling-network
  #       # ipv4_address: 172.19.0.11
  #   restart: unless-stopped
  #   depends_on:
  #     - bank-postgres
  #     # - consul
  #   volumes:
  #     - ${BANK_CONFIG_PATH}:/app/config.json

  rabbitmq:
    image: rabbitmq:3.10.7-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672" 
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - online-traveling-network
networks:
  online-traveling-network:
    driver: bridge
    # ipam:
    #   config:
    #     - subnet: 172.19.0.0/16
volumes:
  rabbitmq-data:
    driver: local
