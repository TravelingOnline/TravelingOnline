// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: tour.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TourCreateRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Capacity         uint64                 `protobuf:"varint,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Price            uint64                 `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	IsActive         bool                   `protobuf:"varint,3,opt,name=is_active,proto3" json:"is_active,omitempty"`
	OutboundTicketId uint64                 `protobuf:"varint,4,opt,name=outbound_ticket_id,json=outbound,proto3" json:"outbound_ticket_id,omitempty"`
	ReturnTicketId   uint64                 `protobuf:"varint,5,opt,name=return_ticket_id,json=return,proto3" json:"return_ticket_id,omitempty"`
	HotelId          uint64                 `protobuf:"varint,6,opt,name=hotel_id,json=hotel,proto3" json:"hotel_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TourCreateRequest) Reset() {
	*x = TourCreateRequest{}
	mi := &file_tour_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TourCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourCreateRequest) ProtoMessage() {}

func (x *TourCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourCreateRequest.ProtoReflect.Descriptor instead.
func (*TourCreateRequest) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{0}
}

func (x *TourCreateRequest) GetCapacity() uint64 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *TourCreateRequest) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TourCreateRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *TourCreateRequest) GetOutboundTicketId() uint64 {
	if x != nil {
		return x.OutboundTicketId
	}
	return 0
}

func (x *TourCreateRequest) GetReturnTicketId() uint64 {
	if x != nil {
		return x.ReturnTicketId
	}
	return 0
}

func (x *TourCreateRequest) GetHotelId() uint64 {
	if x != nil {
		return x.HotelId
	}
	return 0
}

type TourFilterRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HotelId          uint64                 `protobuf:"varint,2,opt,name=hotel_id,json=hotel,proto3" json:"hotel_id,omitempty"`
	OutboundTicketId uint64                 `protobuf:"varint,3,opt,name=outbound_ticket_id,json=outbound,proto3" json:"outbound_ticket_id,omitempty"`
	ReturnTicketId   uint64                 `protobuf:"varint,4,opt,name=return_ticket_id,json=return,proto3" json:"return_ticket_id,omitempty"`
	IsActive         bool                   `protobuf:"varint,5,opt,name=is_active,proto3" json:"is_active,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TourFilterRequest) Reset() {
	*x = TourFilterRequest{}
	mi := &file_tour_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TourFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourFilterRequest) ProtoMessage() {}

func (x *TourFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourFilterRequest.ProtoReflect.Descriptor instead.
func (*TourFilterRequest) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{1}
}

func (x *TourFilterRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourFilterRequest) GetHotelId() uint64 {
	if x != nil {
		return x.HotelId
	}
	return 0
}

func (x *TourFilterRequest) GetOutboundTicketId() uint64 {
	if x != nil {
		return x.OutboundTicketId
	}
	return 0
}

func (x *TourFilterRequest) GetReturnTicketId() uint64 {
	if x != nil {
		return x.ReturnTicketId
	}
	return 0
}

func (x *TourFilterRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type BuyTourRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuyTourRequest) Reset() {
	*x = BuyTourRequest{}
	mi := &file_tour_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyTourRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyTourRequest) ProtoMessage() {}

func (x *BuyTourRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyTourRequest.ProtoReflect.Descriptor instead.
func (*BuyTourRequest) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{2}
}

func (x *BuyTourRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BuyTourResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuyTourResponse) Reset() {
	*x = BuyTourResponse{}
	mi := &file_tour_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyTourResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyTourResponse) ProtoMessage() {}

func (x *BuyTourResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyTourResponse.ProtoReflect.Descriptor instead.
func (*BuyTourResponse) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{3}
}

func (x *BuyTourResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type Tour struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Capacity         uint64                 `protobuf:"varint,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Price            uint64                 `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	IsActive         bool                   `protobuf:"varint,3,opt,name=is_active,proto3" json:"is_active,omitempty"`
	OutboundTicketId uint64                 `protobuf:"varint,4,opt,name=outbound_ticket_id,json=outbound,proto3" json:"outbound_ticket_id,omitempty"`
	ReturnTicketId   uint64                 `protobuf:"varint,5,opt,name=return_ticket_id,json=return,proto3" json:"return_ticket_id,omitempty"`
	HotelId          uint64                 `protobuf:"varint,6,opt,name=hotel_id,json=hotel,proto3" json:"hotel_id,omitempty"`
	Id               uint64                 `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	Uuid             string                 `protobuf:"bytes,8,opt,name=uuid,proto3" json:"uuid,omitempty"`
	AgencyId         uint64                 `protobuf:"varint,9,opt,name=agency_id,json=agencyID,proto3" json:"agency_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Tour) Reset() {
	*x = Tour{}
	mi := &file_tour_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tour) ProtoMessage() {}

func (x *Tour) ProtoReflect() protoreflect.Message {
	mi := &file_tour_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tour.ProtoReflect.Descriptor instead.
func (*Tour) Descriptor() ([]byte, []int) {
	return file_tour_proto_rawDescGZIP(), []int{4}
}

func (x *Tour) GetCapacity() uint64 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *Tour) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Tour) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Tour) GetOutboundTicketId() uint64 {
	if x != nil {
		return x.OutboundTicketId
	}
	return 0
}

func (x *Tour) GetReturnTicketId() uint64 {
	if x != nil {
		return x.ReturnTicketId
	}
	return 0
}

func (x *Tour) GetHotelId() uint64 {
	if x != nil {
		return x.HotelId
	}
	return 0
}

func (x *Tour) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tour) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Tour) GetAgencyId() uint64 {
	if x != nil {
		return x.AgencyId
	}
	return 0
}

var File_tour_proto protoreflect.FileDescriptor

var file_tour_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x01, 0x0a,
	0x11, 0x54, 0x6f, 0x75, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x24, 0x0a, 0x12, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x17, 0x0a, 0x08, 0x68, 0x6f,
	0x74, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x68, 0x6f,
	0x74, 0x65, 0x6c, 0x22, 0xa2, 0x01, 0x0a, 0x11, 0x54, 0x6f, 0x75, 0x72, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x08, 0x68, 0x6f, 0x74,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x68, 0x6f, 0x74,
	0x65, 0x6c, 0x12, 0x24, 0x0a, 0x12, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x20, 0x0a, 0x0e, 0x42, 0x75, 0x79, 0x54,
	0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0f, 0x42, 0x75,
	0x79, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf8, 0x01, 0x0a, 0x04, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x24,
	0x0a, 0x12, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x17, 0x0a, 0x08, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x44,
	0x42, 0x0f, 0x5a, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tour_proto_rawDescOnce sync.Once
	file_tour_proto_rawDescData = file_tour_proto_rawDesc
)

func file_tour_proto_rawDescGZIP() []byte {
	file_tour_proto_rawDescOnce.Do(func() {
		file_tour_proto_rawDescData = protoimpl.X.CompressGZIP(file_tour_proto_rawDescData)
	})
	return file_tour_proto_rawDescData
}

var file_tour_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tour_proto_goTypes = []any{
	(*TourCreateRequest)(nil), // 0: TourCreateRequest
	(*TourFilterRequest)(nil), // 1: TourFilterRequest
	(*BuyTourRequest)(nil),    // 2: BuyTourRequest
	(*BuyTourResponse)(nil),   // 3: BuyTourResponse
	(*Tour)(nil),              // 4: Tour
}
var file_tour_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tour_proto_init() }
func file_tour_proto_init() {
	if File_tour_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tour_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tour_proto_goTypes,
		DependencyIndexes: file_tour_proto_depIdxs,
		MessageInfos:      file_tour_proto_msgTypes,
	}.Build()
	File_tour_proto = out.File
	file_tour_proto_rawDesc = nil
	file_tour_proto_goTypes = nil
	file_tour_proto_depIdxs = nil
}
